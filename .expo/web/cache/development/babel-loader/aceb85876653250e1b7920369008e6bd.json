{"ast":null,"code":"import AsyncStorage from '@react-native-async-storage/async-storage';\nimport isObject from 'lodash.isobject';\nvar LocalStorage = {\n  getItem: function getItem(key) {\n    if (!key) return false;\n    return toJson(AsyncStorage.getItem(key));\n  },\n  setItem: function setItem(key, value) {\n    if (!key) return false;\n    AsyncStorage.setItem(key, toString(value));\n    return {\n      key: value\n    };\n  },\n  removeItem: function removeItem(key) {\n    if (!key || !AsyncStorage.getItem(key)) return false;\n    return AsyncStorage.removeItem(key);\n  },\n  getAllItems: function getAllItems() {\n    return AsyncStorage.getAllKeys();\n  }\n};\n\nvar toJson = function toJson(string) {\n  try {\n    var json = JSON.parse(string);\n    return json;\n  } catch (e) {\n    console.error();\n    'Fail to convert string to JSON', e;\n    return false;\n  }\n};\n\nvar toString = function toString(string) {\n  try {\n    var json = JSON.stringify(string);\n    return json;\n  } catch (e) {\n    console.error();\n    'Fail to convert JSON to String', e;\n    return false;\n  }\n};\n\nexport default LocalStorage;","map":{"version":3,"sources":["D:/Projects/mu/mu-expo/stores/local.store.js"],"names":["AsyncStorage","isObject","LocalStorage","getItem","key","toJson","setItem","value","toString","removeItem","getAllItems","getAllKeys","string","json","JSON","parse","e","console","error","stringify"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,iBAACC,GAAD,EAAO;AACZ,QAAI,CAACA,GAAL,EAAU,OAAO,KAAP;AACV,WAAOC,MAAM,CAACL,YAAY,CAACG,OAAb,CAAqBC,GAArB,CAAD,CAAb;AACH,GAJgB;AAKjBE,EAAAA,OAAO,EAAE,iBAACF,GAAD,EAAMG,KAAN,EAAc;AACnB,QAAI,CAACH,GAAL,EAAU,OAAO,KAAP;AACVJ,IAAAA,YAAY,CAACM,OAAb,CAAqBF,GAArB,EAA0BI,QAAQ,CAACD,KAAD,CAAlC;AACA,WAAO;AAACH,MAAAA,GAAG,EAAEG;AAAN,KAAP;AACH,GATgB;AAUjBE,EAAAA,UAAU,EAAE,oBAACL,GAAD,EAAO;AACf,QAAI,CAACA,GAAD,IAAQ,CAACJ,YAAY,CAACG,OAAb,CAAqBC,GAArB,CAAb,EAAwC,OAAO,KAAP;AACxC,WAAOJ,YAAY,CAACS,UAAb,CAAwBL,GAAxB,CAAP;AACH,GAbgB;AAcjBM,EAAAA,WAAW,EAAE;AAAA,WAAKV,YAAY,CAACW,UAAb,EAAL;AAAA;AAdI,CAArB;;AAiBA,IAAMN,MAAM,GAAG,SAATA,MAAS,CAACO,MAAD,EAAY;AACvB,MAAI;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAb;AACA,WAAOC,IAAP;AACH,GAHD,CAGE,OAAOG,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR;AAAiB,sCAAkCF,CAAnC;AAChB,WAAO,KAAP;AACH;AACJ,CARD;;AAUA,IAAMR,QAAQ,GAAG,SAAXA,QAAW,CAACI,MAAD,EAAY;AACzB,MAAI;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACK,SAAL,CAAeP,MAAf,CAAb;AACA,WAAOC,IAAP;AACH,GAHD,CAGE,OAAOG,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR;AAAiB,sCAAkCF,CAAnC;AAChB,WAAO,KAAP;AACH;AACJ,CARD;;AAUA,eAAed,YAAf","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport isObject from 'lodash.isobject'\r\n\r\nconst LocalStorage = {\r\n    getItem: (key)=>{\r\n        if (!key) return false\r\n        return toJson(AsyncStorage.getItem(key))\r\n    },\r\n    setItem: (key, value)=>{\r\n        if (!key) return false\r\n        AsyncStorage.setItem(key, toString(value))\r\n        return {key: value}\r\n    },\r\n    removeItem: (key)=>{\r\n        if (!key || !AsyncStorage.getItem(key)) return false\r\n        return AsyncStorage.removeItem(key)\r\n    },\r\n    getAllItems: ()=> AsyncStorage.getAllKeys()\r\n}\r\n\r\nconst toJson = (string) => {\r\n    try {\r\n        const json = JSON.parse(string)\r\n        return json;\r\n    } catch (e) {\r\n        console.error();('Fail to convert string to JSON', e)\r\n        return false\r\n    }\r\n}\r\n\r\nconst toString = (string) => {\r\n    try {\r\n        const json = JSON.stringify(string)\r\n        return json;\r\n    } catch (e) {\r\n        console.error();('Fail to convert JSON to String', e)\r\n        return false\r\n    }\r\n}\r\n\r\nexport default LocalStorage"]},"metadata":{},"sourceType":"module"}