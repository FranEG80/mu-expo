{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\mu\\\\mu-expo\\\\App.js\",\n    _this3 = this;\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport LogoTitle from \"./components/LogoTitle\";\nimport { SafeAreaProvider, useSafeAreaInsets } from 'react-native-safe-area-context';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tabs = createBottomTabNavigator();\n\nfunction AppMain() {\n  var _this = this;\n\n  return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, function () {\n    return React.createElement(Tabs.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-settings' : 'ios-settings-outline';\n            }\n\n            return React.createElement(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 26\n              }\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'gray'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, React.createElement(Tabs.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), React.createElement(Tabs.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), React.createElement(ScreenAndSideBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ScreenAndSideBar() {\n  var _this2 = this;\n\n  return React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(LogoTitle, _extends({}, props, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }\n        }));\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      headerOptions: {\n        prueba: '234'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction SettingsScreen() {\n  var insets = useSafeAreaInsets();\n  return React.createElement(View, {\n    style: {\n      paddingTop: insets.top,\n      paddingBottom: insets.bottom,\n      flex: 1,\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nvar App = function App() {\n  return React.createElement(SafeAreaProvider, {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 3\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, React.createElement(AppMain, {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/mu/mu-expo/App.js"],"names":["React","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","HomeScreen","ProfileScreen","LogoTitle","SafeAreaProvider","useSafeAreaInsets","Ionicons","Stack","Drawer","Tabs","AppMain","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","SettingsScreen","ScreenAndSideBar","headerTitle","props","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","headerOptions","prueba","insets","paddingTop","top","paddingBottom","bottom","flex","justifyContent","alignItems","App"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { createDrawerNavigator } from '@react-navigation/drawer'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { StyleSheet, Text, View } from 'react-native';\nimport HomeScreen from './screens/HomeScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport LogoTitle from './components/LogoTitle';\n\nimport { SafeAreaProvider, useSafeAreaInsets } from 'react-native-safe-area-context';\n\n\nimport Ionicons from 'react-native-vector-icons/Ionicons'\n\nconst Stack = createStackNavigator()\nconst Drawer = createDrawerNavigator()\nconst Tabs = createBottomTabNavigator();\n\n\nfunction AppMain() {\n  return (\n    <>\n      <Stack.Navigator \n        initialRouteName=\"Home\" // headerMode=\"none\"\n      >\n        <Stack.Screen name=\"Home\">\n          {() => (\n            <Tabs.Navigator \n              initialRouteName=\"Home\" \n              \n              screenOptions={({route})=> ({\n                tabBarIcon: ({ focused, color, size }) =>{\n                  let iconName;\n\n                  if (route.name === 'Home') {\n                    iconName = focused\n                      ? 'ios-information-circle'\n                      : 'ios-information-circle-outline'\n                  } else if (route.name === 'Settings') {\n                    iconName = focused ? 'ios-settings' : 'ios-settings-outline'\n                  }\n\n                  return <Ionicons name={iconName} size={size} color={color} />\n                }\n              })}\n              tabBarOptions={{\n                activeTintColor: 'tomato',\n                inactiveTintColor: 'gray'\n              }}\n              //tabBar={() => null}\n            >\n              <Tabs.Screen name=\"Home\" component={HomeScreen} />\n              <Tabs.Screen name=\"Settings\" component={SettingsScreen} />\n            </Tabs.Navigator>\n          )}\n        </Stack.Screen>\n\n        <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n      </Stack.Navigator>\n      <ScreenAndSideBar/>\n      </>\n  );\n}\n\n// const AppMain2 = () => (\n//   <Tabs.Navigator\n//     screenOptions={({route})=> ({\n//       tabBarIcon: ({ focused, color, size }) =>{\n//         let iconName;\n\n//         if (route.name === 'Home') {\n//           iconName = focused\n//             ? 'ios-information-circle'\n//             : 'ios-information-circle-outline'\n//         } else if (route.name === 'Settings') {\n//           iconName = focused ? 'ios-settings' : 'ios-settings-outline'\n//         }\n\n//         return <Ionicons name={iconName} size={size} color={color} />\n//       }\n//     })}\n//     tabBarOptions={{\n//       activeTintColor: 'tomato',\n//       inactiveTintColor: 'gray'\n//     }}\n//   >\n//     <Tabs.Screen \n//       name=\"Home\" \n//       component={HomeScreen}\n//       options={{\n//         //headerTitle: props => <LogoTitle {...props} />,\n//         title: 'Bienvenido', //solo titulo arriba\n//         // Styles header bar\n//         headerStyle: {\n//           backgroundColor: '#f4511e',\n//         },\n//         headerTintColor: '#fff',\n//         headerTitleStyle: {\n//           fontWeight: 'bold',\n//         },\n//         headerOptions: {prueba: '234'}\n//       }}\n//     />\n//     <Tabs.Screen \n//       name=\"Settings\" \n//       component={SettingsScreen}\n//       options={{tabBarBadge: 5}} //badge en el icon\n//     />\n//   </Tabs.Navigator>\n// )\n\nfunction ScreenAndSideBar() {\n  return (\n    <Drawer.Navigator initialRouteName='Home'>\n      <Drawer.Screen \n        name='Home' \n        component={HomeScreen}\n        options={{\n          headerTitle: props => <LogoTitle {...props} />,\n          //title: 'Bienvenido', //solo titulo arriba\n          // Styles header bar\n          headerStyle: {\n            backgroundColor: '#f4511e',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n          headerOptions: {prueba: '234'}\n        }}\n      />\n      <Drawer.Screen \n        name='Profile' \n        component={ProfileScreen}\n      />\n    </Drawer.Navigator>\n  );\n}\n\nfunction SettingsScreen() {\n  const insets = useSafeAreaInsets()\n  return (\n    <View style={{ \n      paddingTop: insets.top,\n      paddingBottom: insets.bottom,\n\n      flex: 1,\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\n// const Screens = () => (\n//   <Stack.Navigator \n//       //headerMode='none' oculta el header, no es recomendable\n//       initialRouteName=\"Home\" \n//       screenOptions={{\n//         headerStyle: {\n//           backgroundColor: '#3f451e'\n//         },\n//         headerTintColor: '#fff',\n//         headerTitleStyle: {\n//           fontWeight: 'bold'\n//         }\n//       }}\n//     >\n//       <Stack.Screen\n//         name=\"Home\"\n//         component={HomeScreen}\n//         options={{\n//           headerTitle: props => <LogoTitle {...props} />,\n//           //title: 'Bienvenido', //solo titulo arriba\n//           // Styles header bar\n//           headerStyle: {\n//             backgroundColor: '#f4511e',\n//           },\n//           headerTintColor: '#fff',\n//           headerTitleStyle: {\n//             fontWeight: 'bold',\n//           },\n//           headerOptions: {prueba: '234'}\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"Profile\" \n//         component={ProfileScreen}\n//         options={{\n//           transitionSpec: {\n//             open: config,\n//             close: config,\n//           },\n//         }}\n//       />\n//     </Stack.Navigator>\n// )\n// const config = {\n//   animation: 'spring',\n//   config: {\n//     stiffness: 1000,\n//     damping: 500,\n//     mass: 3,\n//     overshootClamping: true,\n//     restDisplacementThreshold: 0.01,\n//     restSpeedThreshold: 0.01,\n//   },\n// };\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n\n\nconst App = () => (\n  <SafeAreaProvider>\n    <NavigationContainer>\n      <AppMain/>\n    </NavigationContainer>\n  </SafeAreaProvider>\n  \n)\n\nexport default App;"]},"metadata":{},"sourceType":"module"}