{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Projects\\\\mu\\\\mu-expo\\\\App.js\";\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppNavigator from \"./navigations\";\nimport { SafeAreaProvider, useSafeAreaInsets } from 'react-native-safe-area-context';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tabs = createBottomTabNavigator();\nvar commonScreens = {\n  Settings: SettingsScreen\n};\nvar authScreens = {\n  SignIn: SignInScreen,\n  SignUp: SignUpScreen\n};\n\nvar MyApp = function MyApp() {\n  return React.createElement(Drawer.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  });\n};\n\nfunction ScreenAndSideBar() {\n  var _this2 = this;\n\n  return React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(LogoTitle, _extends({}, props, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }\n        }));\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      headerOptions: {\n        prueba: '234'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar App3 = function App3() {\n  return React.createElement(SafeAreaProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 3\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }\n  }, React.createElement(AppMain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar App = function App() {\n  return React.createElement(SafeAreaProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 3\n    }\n  }, React.createElement(AppNavigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/mu/mu-expo/App.js"],"names":["React","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","AppNavigator","SafeAreaProvider","useSafeAreaInsets","Ionicons","Stack","Drawer","Tabs","commonScreens","Settings","SettingsScreen","authScreens","SignIn","SignInScreen","SignUp","SignUpScreen","MyApp","ScreenAndSideBar","HomeScreen","headerTitle","props","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","headerOptions","prueba","ProfileScreen","App3","App"],"mappings":";;;;;AAAA,OAAO,8BAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;;;AAMA,OAAOC,YAAP;AAEA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,gCAApD;AAGA,OAAOC,QAAP;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;AACA,IAAMQ,MAAM,GAAGP,qBAAqB,EAApC;AACA,IAAMQ,IAAI,GAAGP,wBAAwB,EAArC;AAEA,IAAMQ,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAEC;AADU,CAAtB;AAIA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAEC,YADU;AAElBC,EAAAA,MAAM,EAAEC;AAFU,CAApB;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SACZ,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY;AAAA,CAAd;;AAmGA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,SACE,oBAAC,MAAD,CAAQ,SAAR;AAAkB,IAAA,gBAAgB,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,MAAR;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEC,UAFb;AAGE,IAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,qBAAAC,KAAK;AAAA,eAAI,oBAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OADX;AAIPC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAJN;AAOPC,MAAAA,eAAe,EAAE,MAPV;AAQPC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI,OARX;AAWPC,MAAAA,aAAa,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT;AAXR,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAkBE,oBAAC,MAAD,CAAQ,MAAR;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAEC,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAyBD;;AAmED,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SACX,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADW;AAAA,CAAb;;AASA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADU;AAAA,CAAZ;;AAMA,eAAeA,GAAf","sourcesContent":["import 'react-native-gesture-handler'\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { createDrawerNavigator } from '@react-navigation/drawer'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { StyleSheet, Text, View } from 'react-native';\n// import HomeScreen from './screens/HomeScreen/HomeScreen';\n// import ProfileScreen from './screens/ProfileScreen';\n// import LogoTitle from './components/molecules/LogoTitle';\n\nimport AppNavigator from './navigations'\n\nimport { SafeAreaProvider, useSafeAreaInsets } from 'react-native-safe-area-context';\n\n\nimport Ionicons from 'react-native-vector-icons/Ionicons'\n\nconst Stack = createStackNavigator()\nconst Drawer = createDrawerNavigator()\nconst Tabs = createBottomTabNavigator();\n\nconst commonScreens = {\n  Settings: SettingsScreen\n}\n\nconst authScreens = {\n  SignIn: SignInScreen,\n  SignUp: SignUpScreen,\n};\n\nconst MyApp = () => (\n  <Drawer.Navigator>\n  </Drawer.Navigator>\n)\n\n\n// function AppMain() {\n//   return (\n//     <>\n//       <Stack.Navigator\n//         screenOptions={{animationEnabled:true}}\n//         initialRouteName=\"Home\" // headerMode=\"none\"\n//       >\n//         <Stack.Screen name=\"Home\">\n//           {() => (\n//             <Tabs.Navigator \n//               initialRouteName=\"Home\"  \n//               screenOptions={({route})=> ({\n//                 tabBarIcon: ({ focused, color, size }) =>{\n//                   let iconName;\n\n//                   if (route.name === 'Home') {\n//                     iconName = focused\n//                       ? 'ios-information-circle'\n//                       : 'ios-information-circle-outline'\n//                   } else if (route.name === 'Settings') {\n//                     iconName = focused ? 'ios-settings' : 'ios-settings-outline'\n//                   }\n\n//                   return <Ionicons name={iconName} size={size} color={color} />\n//                 },\n                \n//               })}\n//               tabBarOptions={{\n//                 activeTintColor: 'tomato',\n//                 inactiveTintColor: 'gray'\n//               }}\n//               //tabBar={() => null}\n//             >\n//               <Tabs.Screen name=\"Home\" component={HomeScreen} />\n//               <Tabs.Screen name=\"Settings\" component={SettingsScreen} />\n//             </Tabs.Navigator>\n//           )}\n//         </Stack.Screen>\n\n//         <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n//         <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n//       </Stack.Navigator>\n//       </>\n//   );\n// }\n\n// const AppMain2 = () => (\n//   <Tabs.Navigator\n//     screenOptions={({route})=> ({\n//       tabBarIcon: ({ focused, color, size }) =>{\n//         let iconName;\n\n//         if (route.name === 'Home') {\n//           iconName = focused\n//             ? 'ios-information-circle'\n//             : 'ios-information-circle-outline'\n//         } else if (route.name === 'Settings') {\n//           iconName = focused ? 'ios-settings' : 'ios-settings-outline'\n//         }\n\n//         return <Ionicons name={iconName} size={size} color={color} />\n//       }\n//     })}\n//     tabBarOptions={{\n//       activeTintColor: 'tomato',\n//       inactiveTintColor: 'gray'\n//     }}\n//   >\n//     <Tabs.Screen \n//       name=\"Home\" \n//       component={HomeScreen}\n//       options={{\n//         //headerTitle: props => <LogoTitle {...props} />,\n//         title: 'Bienvenido', //solo titulo arriba\n//         // Styles header bar\n//         headerStyle: {\n//           backgroundColor: '#f4511e',\n//         },\n//         headerTintColor: '#fff',\n//         headerTitleStyle: {\n//           fontWeight: 'bold',\n//         },\n//         headerOptions: {prueba: '234'}\n//       }}\n//     />\n//     <Tabs.Screen \n//       name=\"Settings\" \n//       component={SettingsScreen}\n//       options={{tabBarBadge: 5}} //badge en el icon\n//     />\n//   </Tabs.Navigator>\n// )\n\nfunction ScreenAndSideBar() {\n  return (\n    <Drawer.Navigator initialRouteName='Home'>\n      <Drawer.Screen \n        name='Home' \n        component={HomeScreen}\n        options={{\n          headerTitle: props => <LogoTitle {...props} />,\n          //title: 'Bienvenido', //solo titulo arriba\n          // Styles header bar\n          headerStyle: {\n            backgroundColor: '#f4511e',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n          headerOptions: {prueba: '234'}\n        }}\n      />\n      <Drawer.Screen \n        name='Profile' \n        component={ProfileScreen}\n      />\n    </Drawer.Navigator>\n  );\n}\n\n\n// const Screens = () => (\n//   <Stack.Navigator \n//       //headerMode='none' oculta el header, no es recomendable\n//       initialRouteName=\"Home\" \n//       screenOptions={{\n//         headerStyle: {\n//           backgroundColor: '#3f451e'\n//         },\n//         headerTintColor: '#fff',\n//         headerTitleStyle: {\n//           fontWeight: 'bold'\n//         }\n//       }}\n//     >\n//       <Stack.Screen\n//         name=\"Home\"\n//         component={HomeScreen}\n//         options={{\n//           headerTitle: props => <LogoTitle {...props} />,\n//           //title: 'Bienvenido', //solo titulo arriba\n//           // Styles header bar\n//           headerStyle: {\n//             backgroundColor: '#f4511e',\n//           },\n//           headerTintColor: '#fff',\n//           headerTitleStyle: {\n//             fontWeight: 'bold',\n//           },\n//           headerOptions: {prueba: '234'}\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"Profile\" \n//         component={ProfileScreen}\n//         options={{\n//           transitionSpec: {\n//             open: config,\n//             close: config,\n//           },\n//         }}\n//       />\n//     </Stack.Navigator>\n// )\n// const config = {\n//   animation: 'spring',\n//   config: {\n//     stiffness: 1000,\n//     damping: 500,\n//     mass: 3,\n//     overshootClamping: true,\n//     restDisplacementThreshold: 0.01,\n//     restSpeedThreshold: 0.01,\n//   },\n// };\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n\n\nconst App3 = () => (\n  <SafeAreaProvider>\n    <NavigationContainer>\n      <AppMain/>\n    </NavigationContainer>\n  </SafeAreaProvider>\n  \n)\n\nconst App = () => (\n  <SafeAreaProvider>\n    <AppNavigator/>\n  </SafeAreaProvider>\n)\n\nexport default App;"]},"metadata":{},"sourceType":"module"}