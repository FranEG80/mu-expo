{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Projects\\\\mu\\\\mu-expo\\\\stores\\\\global.store.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar CURRENT_USER_KEY = 'current-user';\nvar GlobalContext = React.createContext();\nvar INITAL_STATE = {\n  user: AsyncStorage.getItem(CURRENT_USER_KEY) || '{}'\n};\n\nvar GlobalStore = function GlobalStore(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(INITAL_STATE),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleUserChange = function handleUserChange(newUser) {\n    setUser(_objectSpread(_objectSpread({}, INITAL_STATE), {}, {\n      user: newUser\n    }));\n\n    if (newUser && newUser.id) {\n      AsyncStorage.setItem(CURRENT_USER_KEY, JSON.stringify(newUser));\n    } else AsyncStorage.removeItem(CURRENT_USER_KEY);\n  };\n\n  var isAuthenticated = function isAuthenticated() {\n    return user && user.id;\n  };\n\n  var getStateKey = function getStateKey(key) {};\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      user: user,\n      isAuthenticated: isAuthenticated,\n      onUserChange: handleUserChange\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport { GlobalStore, GlobalContext };","map":{"version":3,"sources":["D:/Projects/mu/mu-expo/stores/global.store.js"],"names":["React","useState","AsyncStorage","CURRENT_USER_KEY","GlobalContext","createContext","INITAL_STATE","user","getItem","GlobalStore","children","state","setState","handleUserChange","newUser","setUser","id","setItem","JSON","stringify","removeItem","isAuthenticated","getStateKey","key","onUserChange"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,IAAMC,gBAAgB,GAAG,cAAzB;AACA,IAAMC,aAAa,GAAGJ,KAAK,CAACK,aAAN,EAAtB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAEL,YAAY,CAACM,OAAb,CAAqBL,gBAArB,KAA0C;AAD/B,CAArB;;AAIA,IAAMM,WAAW,GAAG,SAAdA,WAAc,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBACNT,QAAQ,CAACK,YAAD,CADF;AAAA;AAAA,MACzBK,KADyB;AAAA,MAClBC,QADkB;;AAGhC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAa;AAClCC,IAAAA,OAAO,iCAAKT,YAAL;AAAmBC,MAAAA,IAAI,EAAEO;AAAzB,OAAP;;AACA,QAAIA,OAAO,IAAIA,OAAO,CAACE,EAAvB,EAA2B;AAACd,MAAAA,YAAY,CAACe,OAAb,CAAqBd,gBAArB,EAAuCe,IAAI,CAACC,SAAL,CAAeL,OAAf,CAAvC;AAAgE,KAA5F,MACKZ,YAAY,CAACkB,UAAb,CAAwBjB,gBAAxB;AACR,GAJD;;AAMA,MAAMkB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WAAMd,IAAI,IAAIA,IAAI,CAACS,EAAnB;AAAA,GAAxB;;AAEA,MAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAS,CAE5B,CAFD;;AAIA,SACI,oBAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHhB,MAAAA,IAAI,EAAJA,IADG;AAEHc,MAAAA,eAAe,EAAfA,eAFG;AAGHG,MAAAA,YAAY,EAAEX;AAHX,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKH,QAPL,CADJ;AAWH,CA1BD;;AA4BA,SAAQD,WAAR,EAAqBL,aAArB","sourcesContent":["import React, { useState } from 'react'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst CURRENT_USER_KEY = 'current-user'\r\nconst GlobalContext = React.createContext()\r\n\r\nconst INITAL_STATE = {\r\n    user: AsyncStorage.getItem(CURRENT_USER_KEY) || '{}'\r\n}\r\n\r\nconst GlobalStore = ({children}) => {\r\n    const [state, setState] = useState(INITAL_STATE)\r\n\r\n    const handleUserChange = (newUser) => {\r\n        setUser({...INITAL_STATE, user: newUser})\r\n        if (newUser && newUser.id) {AsyncStorage.setItem(CURRENT_USER_KEY, JSON.stringify(newUser))}\r\n        else AsyncStorage.removeItem(CURRENT_USER_KEY) \r\n    }\r\n\r\n    const isAuthenticated = () => user && user.id\r\n\r\n    const getStateKey = (key) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                user,\r\n                isAuthenticated,\r\n                onUserChange: handleUserChange,\r\n            }}\r\n        >\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport {GlobalStore, GlobalContext};"]},"metadata":{},"sourceType":"module"}