{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\mu\\\\mu-expo\\\\App.js\",\n    _this2 = this;\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport LogoTitle from \"./components/LogoTitle\";\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tabs = createBottomTabNavigator();\n\nfunction AppMain() {\n  var _this = this;\n\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    headerMode: \"none\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-settings' : 'ios-settings-outline';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, function () {\n    return React.createElement(Tabs.Navigator, {\n      initialRouteName: \"Settings\",\n      tabBar: function tabBar() {\n        return null;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, React.createElement(Tabs.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }), React.createElement(Tabs.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar AppMain2 = function AppMain2() {\n  return React.createElement(Tabs.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n              color = _ref4.color,\n              size = _ref4.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-settings' : 'ios-settings-outline';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 16\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, React.createElement(Tabs.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: 'Bienvenido',\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      headerOptions: {\n        prueba: '234'\n      }\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    options: {\n      tabBarBadge: 5\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }));\n};\n\nfunction ScreenAndSideBar() {\n  var _this3 = this;\n\n  return React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Screen\",\n    component: Screens,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(LogoTitle, _extends({}, props, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }\n        }));\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      headerOptions: {\n        prueba: '234'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nvar Screens = function Screens() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#3f451e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(LogoTitle, _extends({}, props, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }\n        }));\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      headerOptions: {\n        prueba: '234'\n      }\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    options: {\n      transitionSpec: {\n        open: config,\n        close: config\n      }\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar config = {\n  animation: 'spring',\n  config: {\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar App = function App() {\n  return React.createElement(SafeAreaProvider, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 3\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, React.createElement(AppMain, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/mu/mu-expo/App.js"],"names":["React","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","HomeScreen","ProfileScreen","LogoTitle","SafeAreaProvider","SafeAreaView","Ionicons","Stack","Drawer","Tabs","AppMain","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","SettingsScreen","AppMain2","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","headerOptions","prueba","tabBarBadge","ScreenAndSideBar","Screens","headerTitle","props","flex","justifyContent","alignItems","transitionSpec","open","config","close","animation","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","styles","StyleSheet","create","container","App"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { createDrawerNavigator } from '@react-navigation/drawer'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { StyleSheet, Text, View } from 'react-native';\nimport HomeScreen from './screens/HomeScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport LogoTitle from './components/LogoTitle';\n\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\n\n\nimport Ionicons from 'react-native-vector-icons/Ionicons'\n\nconst Stack = createStackNavigator()\nconst Drawer = createDrawerNavigator()\nconst Tabs = createBottomTabNavigator();\n\n\nfunction AppMain() {\n  return (\n      <Stack.Navigator initialRouteName=\"Home\" headerMode=\"none\"\n      \n        screenOptions={({route})=> ({\n          tabBarIcon: ({ focused, color, size }) =>{\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused\n                ? 'ios-information-circle'\n                : 'ios-information-circle-outline'\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-settings' : 'ios-settings-outline'\n            }\n\n            return <Ionicons name={iconName} size={size} color={color} />\n          }\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray'\n        }}\n      >\n        <Stack.Screen name=\"Home\">\n          {() => (\n            <Tabs.Navigator initialRouteName=\"Settings\" tabBar={() => null}>\n              <Tabs.Screen name=\"Settings\" component={SettingsScreen} />\n              <Tabs.Screen name=\"Profile\" component={ProfileScreen} />\n            </Tabs.Navigator>\n          )}\n        </Stack.Screen>\n\n        <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n      </Stack.Navigator>\n  );\n}\n\nconst AppMain2 = () => (\n  <Tabs.Navigator\n    screenOptions={({route})=> ({\n      tabBarIcon: ({ focused, color, size }) =>{\n        let iconName;\n\n        if (route.name === 'Home') {\n          iconName = focused\n            ? 'ios-information-circle'\n            : 'ios-information-circle-outline'\n        } else if (route.name === 'Settings') {\n          iconName = focused ? 'ios-settings' : 'ios-settings-outline'\n        }\n\n        return <Ionicons name={iconName} size={size} color={color} />\n      }\n    })}\n    tabBarOptions={{\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    }}\n  >\n    <Tabs.Screen \n      name=\"Home\" \n      component={HomeScreen}\n      options={{\n        //headerTitle: props => <LogoTitle {...props} />,\n        title: 'Bienvenido', //solo titulo arriba\n        // Styles header bar\n        headerStyle: {\n          backgroundColor: '#f4511e',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n        headerOptions: {prueba: '234'}\n      }}\n    />\n    <Tabs.Screen \n      name=\"Settings\" \n      component={SettingsScreen}\n      options={{tabBarBadge: 5}} //badge en el icon\n    />\n  </Tabs.Navigator>\n)\n\nfunction ScreenAndSideBar() {\n  return (\n    <Drawer.Navigator initialRouteName='Home'>\n      <Drawer.Screen \n        name='Screen' \n        component={Screens}\n        options={{\n          headerTitle: props => <LogoTitle {...props} />,\n          //title: 'Bienvenido', //solo titulo arriba\n          // Styles header bar\n          headerStyle: {\n            backgroundColor: '#f4511e',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n          headerOptions: {prueba: '234'}\n        }}\n      />\n      <Drawer.Screen \n        name='Profile' \n        component={ProfileScreen}\n      />\n    </Drawer.Navigator>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nconst Screens = () => (\n  <Stack.Navigator \n      //headerMode='none' oculta el header, no es recomendable\n      initialRouteName=\"Home\" \n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#3f451e'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }}\n    >\n      <Stack.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          headerTitle: props => <LogoTitle {...props} />,\n          //title: 'Bienvenido', //solo titulo arriba\n          // Styles header bar\n          headerStyle: {\n            backgroundColor: '#f4511e',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n          headerOptions: {prueba: '234'}\n        }}\n      />\n      <Stack.Screen\n        name=\"Profile\" \n        component={ProfileScreen}\n        options={{\n          transitionSpec: {\n            open: config,\n            close: config,\n          },\n        }}\n      />\n    </Stack.Navigator>\n)\nconst config = {\n  animation: 'spring',\n  config: {\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n  },\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\nconst App = () => (\n  <SafeAreaProvider>\n    <NavigationContainer>\n      <AppMain/>\n    </NavigationContainer>\n  </SafeAreaProvider>\n  \n)\n\nexport default App;"]},"metadata":{},"sourceType":"module"}