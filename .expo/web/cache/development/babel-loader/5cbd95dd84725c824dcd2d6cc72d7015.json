{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Projects\\\\mu\\\\mu-expo\\\\App.js\";\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppNavigator from \"./navigations\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nvar App = function App() {\n  return React.createElement(SafeAreaProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 3\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, React.createElement(AppNavigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/mu/mu-expo/App.js"],"names":["React","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","AppNavigator","SafeAreaProvider","App"],"mappings":";;;AAAA,OAAO,8BAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;;;AAMA,OAAOC,YAAP;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;;AAqNA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADU;AAAA,CAAZ;;AASA,eAAeA,GAAf","sourcesContent":["import 'react-native-gesture-handler'\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { createDrawerNavigator } from '@react-navigation/drawer'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { StyleSheet, Text, View } from 'react-native';\n// import HomeScreen from './screens/HomeScreen/HomeScreen';\n// import ProfileScreen from './screens/ProfileScreen';\n// import LogoTitle from './components/molecules/LogoTitle';\n\nimport AppNavigator from './navigations'\n\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\n\n// const commonScreens = {\n//   Settings: SettingsScreen\n// }\n\n// const authScreens = {\n//   SignIn: SignInScreen,\n//   SignUp: SignUpScreen,\n// };\n\n// const MyApp = () => (\n//   <Drawer.Navigator>\n//   </Drawer.Navigator>\n// )\n\n\n// function AppMain() {\n//   return (\n//     <>\n//       <Stack.Navigator\n//         screenOptions={{animationEnabled:true}}\n//         initialRouteName=\"Home\" // headerMode=\"none\"\n//       >\n//         <Stack.Screen name=\"Home\">\n//           {() => (\n//             <Tabs.Navigator \n//               initialRouteName=\"Home\"  \n//               screenOptions={({route})=> ({\n//                 tabBarIcon: ({ focused, color, size }) =>{\n//                   let iconName;\n\n//                   if (route.name === 'Home') {\n//                     iconName = focused\n//                       ? 'ios-information-circle'\n//                       : 'ios-information-circle-outline'\n//                   } else if (route.name === 'Settings') {\n//                     iconName = focused ? 'ios-settings' : 'ios-settings-outline'\n//                   }\n\n//                   return <Ionicons name={iconName} size={size} color={color} />\n//                 },\n                \n//               })}\n//               tabBarOptions={{\n//                 activeTintColor: 'tomato',\n//                 inactiveTintColor: 'gray'\n//               }}\n//               //tabBar={() => null}\n//             >\n//               <Tabs.Screen name=\"Home\" component={HomeScreen} />\n//               <Tabs.Screen name=\"Settings\" component={SettingsScreen} />\n//             </Tabs.Navigator>\n//           )}\n//         </Stack.Screen>\n\n//         <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n//         <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n//       </Stack.Navigator>\n//       </>\n//   );\n// }\n\n// const AppMain2 = () => (\n//   <Tabs.Navigator\n//     screenOptions={({route})=> ({\n//       tabBarIcon: ({ focused, color, size }) =>{\n//         let iconName;\n\n//         if (route.name === 'Home') {\n//           iconName = focused\n//             ? 'ios-information-circle'\n//             : 'ios-information-circle-outline'\n//         } else if (route.name === 'Settings') {\n//           iconName = focused ? 'ios-settings' : 'ios-settings-outline'\n//         }\n\n//         return <Ionicons name={iconName} size={size} color={color} />\n//       }\n//     })}\n//     tabBarOptions={{\n//       activeTintColor: 'tomato',\n//       inactiveTintColor: 'gray'\n//     }}\n//   >\n//     <Tabs.Screen \n//       name=\"Home\" \n//       component={HomeScreen}\n//       options={{\n//         //headerTitle: props => <LogoTitle {...props} />,\n//         title: 'Bienvenido', //solo titulo arriba\n//         // Styles header bar\n//         headerStyle: {\n//           backgroundColor: '#f4511e',\n//         },\n//         headerTintColor: '#fff',\n//         headerTitleStyle: {\n//           fontWeight: 'bold',\n//         },\n//         headerOptions: {prueba: '234'}\n//       }}\n//     />\n//     <Tabs.Screen \n//       name=\"Settings\" \n//       component={SettingsScreen}\n//       options={{tabBarBadge: 5}} //badge en el icon\n//     />\n//   </Tabs.Navigator>\n// )\n\n// function ScreenAndSideBar() {\n//   return (\n//     <Drawer.Navigator initialRouteName='Home'>\n//       <Drawer.Screen \n//         name='Home' \n//         component={HomeScreen}\n//         options={{\n//           headerTitle: props => <LogoTitle {...props} />,\n//           //title: 'Bienvenido', //solo titulo arriba\n//           // Styles header bar\n//           headerStyle: {\n//             backgroundColor: '#f4511e',\n//           },\n//           headerTintColor: '#fff',\n//           headerTitleStyle: {\n//             fontWeight: 'bold',\n//           },\n//           headerOptions: {prueba: '234'}\n//         }}\n//       />\n//       <Drawer.Screen \n//         name='Profile' \n//         component={ProfileScreen}\n//       />\n//     </Drawer.Navigator>\n//   );\n// }\n\n\n// const Screens = () => (\n//   <Stack.Navigator \n//       //headerMode='none' oculta el header, no es recomendable\n//       initialRouteName=\"Home\" \n//       screenOptions={{\n//         headerStyle: {\n//           backgroundColor: '#3f451e'\n//         },\n//         headerTintColor: '#fff',\n//         headerTitleStyle: {\n//           fontWeight: 'bold'\n//         }\n//       }}\n//     >\n//       <Stack.Screen\n//         name=\"Home\"\n//         component={HomeScreen}\n//         options={{\n//           headerTitle: props => <LogoTitle {...props} />,\n//           //title: 'Bienvenido', //solo titulo arriba\n//           // Styles header bar\n//           headerStyle: {\n//             backgroundColor: '#f4511e',\n//           },\n//           headerTintColor: '#fff',\n//           headerTitleStyle: {\n//             fontWeight: 'bold',\n//           },\n//           headerOptions: {prueba: '234'}\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"Profile\" \n//         component={ProfileScreen}\n//         options={{\n//           transitionSpec: {\n//             open: config,\n//             close: config,\n//           },\n//         }}\n//       />\n//     </Stack.Navigator>\n// )\n// const config = {\n//   animation: 'spring',\n//   config: {\n//     stiffness: 1000,\n//     damping: 500,\n//     mass: 3,\n//     overshootClamping: true,\n//     restDisplacementThreshold: 0.01,\n//     restSpeedThreshold: 0.01,\n//   },\n// };\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n\n\n// const App3 = () => (\n//   <SafeAreaProvider>\n//     <NavigationContainer>\n//       <AppMain/>\n//     </NavigationContainer>\n//   </SafeAreaProvider>\n  \n// )\n\nconst App = () => (\n  <SafeAreaProvider>\n    <NavigationContainer>\n      <AppNavigator/>\n    </NavigationContainer>\n\n  </SafeAreaProvider>\n)\n\nexport default App;"]},"metadata":{},"sourceType":"module"}